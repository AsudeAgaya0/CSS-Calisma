*{
    margin: 0px;
    padding: 0px;
}

.container{
    display: grid;
    /* grid-template-rows: 150px 250px; */ /* satırları oluşturmak için kullanılır*/
    /* grid-template-columns: 100px 200px 300px; */

    /*yukarıdaki işlemin aynısı aşağıdaki satır*/
    /* grid-template: 150px 250px / 100px 3fr 1fr; */ /*auto deyince otomatik oalrak kalan kısımları dolduruyor sayfanın, fr:fraction, esnek birim olarak düşün 1fr 3fr deyince boydan boya 4 e bölüyor birine 1k veriyor diğerine 3k veriyor */
   grid-template: 150px 250px / repeat(6,minmax(100px, 300px));

   /*alanlara isimlendirme yapıyor, haritalanıyor*/
   grid-template-areas: 
        "E B C"
        "D A F";
}
.container>div{
    /* width: 100px;
    height: 100px; */
    margin: 10px;
    
}
.card1{
    background-color:coral;
    /* grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3; */
    grid-area: A;
}
.card2{
    background-color: cornflowerblue;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    grid-area: B;
}
.card3{
    background-color: darkcyan;
    grid-area: C;
    /* order: -2; */
}
.card4{
    background-color: darkolivegreen;
    grid-area: D;
}
.card5{
    background-color:darksalmon;
    grid-area: E;
    /* grid-row: 2 / 3; */
    /* grid-column: 1 / 3; */ /* aradaki farkı span ile ifade edebilirsin, 1 / span 2 şeklinde */
    /* grid-area: 2 / 1 / 3 / 3; */ /* satırbaşla/sutünbaşla/satırson/sütunson*/
}
.card6{
    background-color:mediumpurple;
    grid-area: F;
    /* order:-1; */
}
/*grid-template-columns: her kolonun genişliğini belirliyor*/
.grid-container{
    background-color: brown;
    padding: 20px;
    /* height: 450px; */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* grid-template-columns: 150px 250px; */ 
    /* grid-template-columns: 1fr 3fr 1fr; */
    /* grid-template-columns: auto auto 25%; */
    /* grid-template-columns: repeat(4, auto); */ /*3eşit parçaya böldü*/
    /* grid-template-rows: 1fr 2fr;
    grid-auto-rows: 6fr; *//*geri kalanı 6fr otomatik row*/
    gap: 10px;/*elemanlar arası 10px boşluk*/
    /* column-gap: 10px;
    row-gap: 10px; */
}

.item{
    background-color: goldenrod;
    padding: 15px;
    /* margin: 10px; */
    color: white;
}

@media screen and (max-width: 780px) {
    .grid-container{
        grid-template-columns: repeat(2, 1fr);
    }
}
@media screen and (max-width: 500px) {
    .grid-container{
        grid-template-columns: 1fr;
    }
}

.item:first-child{
    /* grid-column-start: 2;
    grid-column-end: 4; */
    /* grid-column: 2 / 4; */
    /* grid-column: 2 / span 2; */ /*span kaç kolonu kapsayacağını belirtir*/
    /* grid-row-start: 2; */
    /* grid-area: 1 / 1 / span 3 / span 3; */ /*1.satırdan 1.sutüna, 3 row 3 column kaplasın demek*/
}

.layout-container{
    height: 100vh;
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
    grid-template-rows: 80px 1fr 80px; /*header ve footer 80 px oldu gerisi ekranı kapladı*/
    grid-template-areas: 
    "header header header"
    "nav main aside"
    "footer footer footer";
}

header, nav, main, aside, footer{
    background-color: brown;
    color: white;
    padding: 15px;
    border: 1px solid sandybrown;
}

header{
    /* grid-column: 1 / 4; */
    grid-area: header; /*yukarıdaki işlemin aynısı oldu bir nevi 
    çünkü container içerisinde grid-template-areas ile 3 kolon verildi ve isimleri header olsun dendi.
    buraya grid-area: header diyerek template area da header yazanlara bu arkadaş eşlik edecek demek oluyor*/
}
nav{
    grid-area: nav;
}
main{
    grid-area: main;
}
aside{
    grid-area: aside;
}
footer{
    /* grid-column: 1 / span 3; */
    grid-area: footer;
}

@media screen and (max-width: 780px) {
    .layout-container{
        grid-template-columns: 1fr;
        grid-template-rows: 50px 50px 1fr 50px 50px;
        grid-template-areas: 
        "header"
        "nav" 
        "main" 
        "aside"
        "footer";
    }
}

.grid-layout-container{
    background-color: brown;
    padding: 20px;
    display: grid;
    /* grid-template-columns: minmax(200px, 1fr) 1fr 1fr; */ /*min değeri 200px olsun eğer üstüne çıkacak olursa 1fr lik yer kaplasın*/
    gap: 10px;
    /* grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); */ /*auto-fill deyince 200px demişiz ya max 200px i alıyor. geri kalan kısma yeni itemlar gelsin diye boşulk bırakıyor. eğer fill yerine fit denirse max 1fr almasını söyleyince onu tamamen alacak*/
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}
.items{
    background-color: goldenrod;
    padding: 15px;
    color: white;
}

.grid-layout-container2{
    background-color: brown;
    height: 500px;
    padding: 20px;
    display: grid;
    gap: 10px;
    grid-template-columns: repeat(3 , 20%);
    grid-template-rows: repeat(2 , 20%);
    /* justify-items: center; *//*içerisindeki itemlara padding+content kadar alan vererek yerleşme sağlıyor, x eksenine göre*/
    /* align-items: center; */ /*justify contentin dikey hali*/

    /*grid elemanının contentini hizalamak için aşağıdakiler yapılır.*/
    justify-content: center;
    align-content: center;
}
.item2{
    background-color: goldenrod;
    padding: 15px;
    color: white;
}
.item2:first-child{
    align-self: start;/*eleman kendi bölgesinde hizalandı oldu*/
    justify-self: center;
}